@using DisneyCafe.Data
@using DisneyCafe.Models.Database
@inject ApplicationDbContext context
@{
    ViewData["Title"] = "Home Page";
    List<Desserts> desserts = await DessertsDb.GetDessertsAsync(context);
}

@if (TempData["WasSuccessful"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <p><strong>@TempData["WasSuccessful"]</strong></p>
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}
<div class="jumbotron text-center">
    <h3 class="display-4">Welcome to DisneyCafe</h3>
    <p class="lead">Where we sell an assortment of desserts at excellent prices!</p>
    <hr class="my-4" />
    <p class="lead">
        @if (desserts.Count != 0)
        {
            Random rand = new Random();
            int index = rand.Next(desserts.Count);
            string dessertName = desserts[index].Title;
            string dessertDesc = desserts[index].Description;
            string[] dessertImages = 
            {
                "lemon-mpie.jpg",
                "cheesecake.jpg",
                "ube-roll.png",
                "chocolate-cake-pop.jpg"
            };
            var imageLink = "images/" + dessertImages[index];
            <div class="card text-center mx-auto" style="width: 20rem;">
                <img src="@imageLink" class="card-img-top" alt="@dessertName" />
                <div class="card-body">
                    <h5 class="card-title">Try our @dessertName!</h5>
                    <p class="card-text">@dessertDesc</p>
                    <a asp-action="Add" asp-controller="Cart" asp-route-id="@desserts[index].Id" class="btn">Order Dessert</a>
                </div>
            </div>
        }
    </p>
</div>